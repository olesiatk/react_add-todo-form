{"version":3,"sources":["components/TodoList.js","api/users.js","App.js","api/todos.js","index.js"],"names":["TodoList","todos","map","todo","key","id","className","classNames","done","completed","title","user","name","users","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","getUserById","userId","find","todosWithUser","App","state","todosNew","todoTitle","todoUserId","errorNoTitle","errorNoUser","length","action","method","onSubmit","event","preventDefault","setState","prevState","newTodo","Math","random","htmlFor","type","value","this","onChange","target","placeholder","hidden","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84c93e26.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.css';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodoList = ({ todos }) => (\n  <ul>\n    {todos.map(todo => (\n      <li\n        key={todo.id}\n      >\n        <strong>Task:</strong>\n        <span className={classNames('todo', { done: todo.completed })}>\n          {todo.title}\n        </span>\n        ----\n        <strong>User:</strong>\n        {' '}\n        {todo.user.name}\n        ----\n        <span className={classNames('todo', { done: todo.completed })}>\n          {todo.completed ? 'Done' : 'In progress'}\n        </span>\n      </li>\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool,\n    user: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired).isRequired,\n};\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React from 'react';\nimport './App.css';\nimport classNames from 'classnames';\nimport { TodoList } from './components/TodoList';\n\nimport users from './api/users';\nimport todos from './api/todos';\n\nfunction getUserById(userId) {\n  return users.find(user => user.id === userId);\n}\n\nconst todosWithUser = todos.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nclass App extends React.Component {\n  state = {\n    todosNew: todosWithUser,\n    todoTitle: '',\n    todoUserId: 0,\n    errorNoTitle: false,\n    errorNoUser: false,\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n        <p>\n          <span>Users: </span>\n          {users.length}\n        </p>\n        <form\n          action=\"/api/todolist\"\n          method=\"Post\"\n          onSubmit={(event) => {\n            event.preventDefault();\n\n            this.setState((prevState) => {\n              if (prevState.todoTitle !== '' && prevState.todoUserId !== 0) {\n                const newTodo = {\n                  id: Math.random(),\n                  title: prevState.todoTitle,\n                  userId: prevState.todoUserId,\n                  user: getUserById(prevState.todoUserId),\n                };\n\n                return ({\n                  todosNew: [...prevState.todosNew, newTodo],\n                  todoTitle: '',\n                  todoUserId: 0,\n                });\n              }\n\n              if (prevState.todoTitle === '' && prevState.todoUserId === 0) {\n                return ({\n                  errorNoTitle: true,\n                  errorNoUser: true,\n                });\n              }\n\n              if (prevState.todoTitle === '') {\n                return ({ errorNoTitle: true });\n              }\n\n              if (prevState.todoUserId === 0) {\n                return ({ errorNoUser: true });\n              }\n\n              return prevState;\n            });\n          }}\n        >\n          <div className=\"form__field\">\n            <label htmlFor=\"new-todo-title\">Todo title </label>\n            <input\n              type=\"text\"\n              name=\"todoTitle\"\n              value={this.state.todoTitle}\n              onChange={(event) => {\n                this.setState({\n                  todoTitle: event.target.value,\n                  errorNoTitle: false,\n                });\n              }}\n              id=\"new-todo-title\"\n              placeholder=\"Todo title\"\n            />\n            <div\n              className={classNames(\n                'error-msg',\n                { hidden: !this.state.errorNoTitle },\n              )}\n            >\n              Please enter the title\n            </div>\n          </div>\n\n          <div className=\"form__field\">\n            <label htmlFor=\"new-todo-user\">Todo user </label>\n            <select\n              name=\"todoUser\"\n              id=\"new-todo-user\"\n              value={this.state.todoUserId}\n              onChange={(event) => {\n                this.setState({\n                  todoUserId: +event.target.value,\n                  errorNoUser: false,\n                });\n              }}\n            >\n              <option>Please choose a user</option>\n              {users.map(user => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n            <div\n              className={classNames(\n                'error-msg',\n                { hidden: !this.state.errorNoUser },\n              )}\n            >\n              Please choose a user\n            </div>\n          </div>\n\n          <button type=\"submit\">\n            Add\n          </button>\n        </form>\n        <TodoList todos={this.state.todosNew} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}